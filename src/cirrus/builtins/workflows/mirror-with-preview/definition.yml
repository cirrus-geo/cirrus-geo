name: ${self:service}-${self:provider.stage}-mirror-with-preview
definition:
  Comment: "Mirror items with selected assets"
  StartAt: copy-assets-batch-or-lambda
  States:
    # copy assets
    copy-assets-batch-or-lambda:
      Type: Choice
      Choices:
        - Variable: "$.process.tasks.copy-assets.batch"
          IsPresent: false
          Next: copy-assets
        - Variable: "$.process.tasks.copy-assets.batch"
          BooleanEquals: false
          Next: copy-assets
        - Variable: "$.process.tasks.copy-assets.batch"
          BooleanEquals: true
          Next: copy-assets-pre-batch
    copy-assets-pre-batch:
      Type: Task
      Resource:
        Fn::GetAtt: [pre-batch, Arn]
      Next: copy-assets-batch
      Retry:
        - ErrorEquals: ["Lambda.TooManyRequestsException", "Lambda.Unknown"]
          IntervalSeconds: 1
          BackoffRate: 2.0
          MaxAttempts: 5
      Catch:
        - ErrorEquals: ["States.ALL"]
          ResultPath: $.error
          Next: failure
    copy-assets-batch:
      Type: Task
      Resource: arn:aws:states:::batch:submitJob.sync
      Parameters:
        JobName: copy-assets-batch
        JobQueue: "#{CopyAssetsJobQueue}"
        JobDefinition: "#{CopyAssetsAsBatchJob}"
        Parameters:
          url.$: "$.url"
      Next: copy-assets-post-batch
      Retry:
        - ErrorEquals: ["Batch.AWSBatchException", "States.TaskFailed"]
          IntervalSeconds: 10.0
          BackoffRate: 2.0
          MaxAttempts: 3
      Catch:
        - ErrorEquals: ["States.ALL"]
          ResultPath: $.error
          Next: copy-assets-post-batch
    copy-assets-post-batch:
      Type: Task
      Resource:
        Fn::GetAtt: [post-batch, Arn]
      Next: add-preview-batch-or-lambda
      Retry:
        - ErrorEquals: ["Lambda.TooManyRequestsException", "Lambda.Unknown"]
          IntervalSeconds: 1
          BackoffRate: 2.0
          MaxAttempts: 5
      Catch:
        - ErrorEquals: ["States.ALL"]
          ResultPath: $.error
          Next: failure
    copy-assets:
      Type: Task
      Resource:
        Fn::GetAtt: [copy-assets, Arn]
      Next: add-preview-batch-or-lambda
      Retry:
        - ErrorEquals: ["Lambda.TooManyRequestsException", "Lambda.Unknown"]
          IntervalSeconds: 1
          BackoffRate: 2.0
          MaxAttempts: 5
      Catch:
        - ErrorEquals: ["States.ALL"]
          ResultPath: $.error
          Next: failure

    # preview
    add-preview-batch-or-lambda:
      Type: Choice
      Choices:
        - Variable: "$.process.tasks.add-preview.batch"
          IsPresent: false
          Next: add-preview
        - Variable: "$.process.tasks.add-preview.batch"
          BooleanEquals: false
          Next: add-preview
        - Variable: "$.process.tasks.add-preview.batch"
          BooleanEquals: true
          Next: add-preview-pre-batch
    add-preview-pre-batch:
      Type: Task
      Resource:
        Fn::GetAtt: [pre-batch, Arn]
      Next: add-preview-batch
      Retry:
        - ErrorEquals: ["Lambda.TooManyRequestsException", "Lambda.Unknown"]
          IntervalSeconds: 1
          BackoffRate: 2.0
          MaxAttempts: 5
      Catch:
        - ErrorEquals: ["States.ALL"]
          ResultPath: $.error
          Next: failure
    add-preview-batch:
      Type: Task
      Resource: arn:aws:states:::batch:submitJob.sync
      Parameters:
        JobName: add-preview-batch
        JobQueue: "#{AddPreviewJobQueue}"
        JobDefinition: "#{AddPreviewAsBatchJob}"
        Parameters:
          url.$: "$.url"
      Next: add-preview-post-batch
      Retry:
        - ErrorEquals: ["Batch.AWSBatchException", "States.TaskFailed"]
          IntervalSeconds: 10.0
          BackoffRate: 2.0
          MaxAttempts: 3
      Catch:
        - ErrorEquals: ["States.ALL"]
          ResultPath: $.error
          Next: add-preview-post-batch
    add-preview-post-batch:
      Type: Task
      Resource:
        Fn::GetAtt: [post-batch, Arn]
      Next: publish
      Retry:
        - ErrorEquals: ["Lambda.TooManyRequestsException", "Lambda.Unknown"]
          IntervalSeconds: 1
          BackoffRate: 2.0
          MaxAttempts: 5
      Catch:
        - ErrorEquals: ["States.ALL"]
          ResultPath: $.error
          Next: failure
    add-preview:
      Type: Task
      Resource:
        Fn::GetAtt: [add-preview, Arn]
      Next: publish
      Retry:
        - ErrorEquals: ["Lambda.TooManyRequestsException", "Lambda.Unknown"]
          IntervalSeconds: 1
          BackoffRate: 2.0
          MaxAttempts: 5
      Catch:
        - ErrorEquals: ["States.ALL"]
          ResultPath: $.error
          Next: failure

    # publish
    publish:
      Type: Task
      Resource:
        Fn::GetAtt: [publish, Arn]
      End: True
      Retry:
        - ErrorEquals: ["Lambda.TooManyRequestsException", "Lambda.Unknown"]
          IntervalSeconds: 1
          BackoffRate: 2.0
          MaxAttempts: 5
      Catch:
        - ErrorEquals: ["States.ALL"]
          ResultPath: $.error
          Next: failure
    failure:
      Type: Fail
