description: Create a preview and/or thumbnail from one or more assets
environment:
  GDAL_DATA: /opt/share/gdal
  PROJ_LIB: /opt/share/proj
lambda:
  memorySize: 1024
  timeout: 900
  runtime: python3.7
  layers:
    - arn:aws:lambda:${self:provider.region}:552188055668:layer:geolambda:2
    - arn:aws:lambda:${self:provider.region}:552188055668:layer:geolambda-python:1
  pythonRequirements:
    include:
      - rasterio==1.2.8
      - rio-cogeo~=1.1.10
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      Resource:
        - !Join
          - ''
          - - 'arn:aws:s3:::'
            - ${self:provider.environment.CIRRUS_DATA_BUCKET}
            - '*'
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:GetObject"
        - "s3:GetBucketLocation"
      Resource: "*"
    - Effect: "Allow"
      Action: secretsmanager:GetSecretValue
      Resource:
        - arn:aws:secretsmanager:#{AWS::Region}:#{AWS::AccountId}:secret:cirrus-creds-*
batch:
  resources:
    Resources:
      AddPreviewAsBatchJob:
        Type: "AWS::Batch::JobDefinition"
        Properties:
          JobDefinitionName: '#{AWS::StackName}-add-preview-as-batch'
          Type: Container
          Parameters:
            url: ""
          ContainerProperties:
            Command:
              - run
              - ${self:service}-${self:provider.stage}-add-preview
              - Ref::url
            Memory: 12000
            Vcpus: 1
            Image: 'cirrusgeo/run-geolambda:0.2.1'
          RetryStrategy:
            Attempts: 1
      AddPreviewComputeEnvironment:
        Type: AWS::Batch::ComputeEnvironment
        Properties:
          Type: MANAGED
          ServiceRole:
            Fn::GetAtt: [ BatchServiceRole, Arn ]
          ComputeResources:
            MaxvCpus: 1000
            SecurityGroupIds: ${self:custom.batch.SecurityGroupIds}
            Subnets: ${self:custom.batch.Subnets}
            InstanceTypes:
              - optimal
            Type: SPOT
            AllocationStrategy: BEST_FIT_PROGRESSIVE
            SpotIamFleetRole:
              Fn::GetAtt: [ EC2SpotRole, Arn ]
            MinvCpus: 0
            InstanceRole:
              Fn::GetAtt: [ BatchInstanceProfile, Arn ]
            Tags: {"Name": "Batch Instance - #{AWS::StackName}"}
            DesiredvCpus: 0
          State: ENABLED
      AddPreviewJobQueue:
        Type: AWS::Batch::JobQueue
        Properties:
          ComputeEnvironmentOrder:
            - Order: 1
              ComputeEnvironment: !Ref AddPreviewComputeEnvironment
          State: ENABLED
          Priority: 1
          JobQueueName: '#{AWS::StackName}-add-preview-jq'
